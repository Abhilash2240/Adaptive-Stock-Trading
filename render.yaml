services:
  - type: web
    name: stocktraderl
    env: docker
    plan: free
    # Use the smaller web-only Dockerfile to reduce build time and image size
    dockerfilePath: ./Dockerfile.web
    autoDeploy: true
    healthCheckPath: /
    envVars:
      - key: NODE_ENV
        value: production
      - key: PYTHON_CMD
        value: python3
      # The Render API key should NOT be committed to source. Set this value in the Render
      # dashboard for each service or use Render's secrets feature.
      # Example (DO NOT ADD THE SECRET VALUE HERE):
      # - key: RENDER_API_KEY
      #   value: <set-in-render-dashboard>
      # NOTE: do NOT hardcode PORT here â€” Render injects a PORT environment variable at runtime.
      # If you need a database, add DATABASE_URL here or configure via Render dashboard.
      # - key: DATABASE_URL
      #   value: your_database_url_here
  - type: worker
    name: stocktraderl-agent
    env: docker
    plan: free
    # Use the agent-specific Dockerfile which installs ML deps and runs the agent HTTP server
    dockerfilePath: ./Dockerfile.agent
    autoDeploy: true
    # The worker will run the Python agent wrapper. Render will build the same Dockerfile
    # but run the container with the following start command (overridable in dashboard):
    startCommand: "python3 apps/server/py/agent_server.py"
    envVars:
      - key: NODE_ENV
        value: production
      - key: PYTHON_CMD
        value: python3
      # AGENT_PORT can be used inside the worker to set which port the agent server listens on
      - key: AGENT_PORT
        value: "9001"
